<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="200" />
        <property name="maxIdle" value="50" />
    </bean>

    <bean id="sessionRepository" class="org.springframework.session.data.redis.RedisOperationsSessionRepository">
        <constructor-arg ref="redisTemplateSession" />
        <property name="defaultMaxInactiveInterval" value="1200" />
    </bean>

    <bean class="org.springframework.boot.context.embedded.FilterRegistrationBean">
        <property name="name" value="cookieBasedSessionFilterRegistration" />
        <property name="filter">
            <bean class="org.springframework.web.filter.DelegatingFilterProxy">
                <constructor-arg>
                    <bean class="org.springframework.session.web.http.SessionRepositoryFilter">
                        <constructor-arg ref="sessionRepository" />
                        <property name="httpSessionStrategy">
                            <bean class="org.springframework.session.web.http.CookieHttpSessionStrategy" />
                        </property>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="urlPatterns">
            <list>
                <value>/api/v1/admin/*</value>
                <value>/api/v1/validation/admin/*</value>
                <value>/api/v1/validation/app/*</value>
                <value>/api/v1/oauth2/*</value>
                <value>/api/v1/common/vimg</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.boot.context.embedded.FilterRegistrationBean">
        <property name="name" value="headerBasedSessionFilterRegistration" />
        <property name="filter">
            <bean class="org.springframework.web.filter.DelegatingFilterProxy">
                <constructor-arg>
                    <bean class="org.springframework.session.web.http.SessionRepositoryFilter">
                        <constructor-arg ref="sessionRepository" />
                        <property name="httpSessionStrategy">
                            <bean class="cn.rongcapital.caas.http.HeaderHttpSessionStrategy" />
                        </property>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="urlPatterns">
            <list>
                <value>/api/v1/user/register</value>
                <value>/api/v1/user/login</value>
                <value>/api/v1/user/changepwd</value>
                <value>/api/v1/user/profile</value>
                <value>/api/v1/validation/vcode/*</value>
                <value>/api/v1/validation/user/*</value>
                <value>/api/v1/common/base64vimg</value>
            </list>
        </property>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="${redis.host}" p:port="${redis.port}" />

    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    <bean id="jsonRedisSerializer" class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer">
        <constructor-arg type="java.lang.Class" value="cn.rongcapital.caas.po.CacheWrapper" />
    </bean>

    <bean id="jdkRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer">
    </bean>

    <bean id="redisTemplateSession" class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="jedisConnectionFactory"
        p:keySerializer-ref="stringRedisSerializer" p:hashKeySerializer-ref="stringRedisSerializer" />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="jedisConnectionFactory" p:keySerializer-ref="stringRedisSerializer"
        p:hashKeySerializer-ref="stringRedisSerializer" p:valueSerializer-ref="stringRedisSerializer" />

    <bean id="redisTemplateCache" class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="jedisConnectionFactory" p:keySerializer-ref="stringRedisSerializer"
        p:hashKeySerializer-ref="stringRedisSerializer" p:valueSerializer-ref="jdkRedisSerializer" />

</beans>